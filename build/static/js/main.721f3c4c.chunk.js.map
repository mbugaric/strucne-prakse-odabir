{"version":3,"sources":["data lazy /^/.//.*//studenti/.json$/ groupOptions: {} namespace object","data lazy /^/.//.*//nastavnaBaza/.json$/ groupOptions: {} namespace object","components/main/main.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","FileSaver","require","Main","props","currentYear","d","Date","getFullYear","state","students","companies","this","studenti","s","duljinaStudiranja","prosjek","tezinskiFaktor","setState","firme","loadStudentsData","loadCompaniesData","firmaNaziv","firmaAdresa","studentIme","brIndeksa","docx","DocxReader","Load","Replace","docxtemplater","setData","Variable","render","error","message","name","stack","properties","console","log","JSON","stringify","SetName","download","Download","saveAs","out","filter","it","prihvaceno","student","i","firma","find","f","prihvacenaFirma","naziv","sjediste","prezime","ime","executeDocx","prisilnoDodijeljeno","prisilnoDodijeljenoFirma","phase3Students","priznavanje","nasaoSam","brojPraksi","length","key","className","email","poslanMail","style","color","odabir1","odabir2","odabir3","toFixed","sort","a","b","ispis","forceRemoveOdabir1","forceRemoveOdabir2","forceRemoveOdabir3","c","onClick","generateUputnice","React","App","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yOAAA,IAAIA,EAAM,CACT,uBAAwB,CACvB,GACA,IAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B,OAAOR,EAAoBK,EAAEG,EAAI,IAAIJ,MAAK,WACzC,OAAOJ,EAAoBU,EAAED,EAAI,MAGnCX,EAAoBa,KAAO,WAC1B,OAAOC,OAAOD,KAAKd,IAEpBC,EAAoBW,GAAK,GACzBI,EAAOC,QAAUhB,G,gBCxBjB,IAAID,EAAM,CACT,2BAA4B,CAC3B,GACA,IAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B,OAAOR,EAAoBK,EAAEG,EAAI,IAAIJ,MAAK,WACzC,OAAOJ,EAAoBU,EAAED,EAAI,MAGnCX,EAAoBa,KAAO,WAC1B,OAAOC,OAAOD,KAAKd,IAEpBC,EAAoBW,GAAK,GACzBI,EAAOC,QAAUhB,G,gJCrBbiB,G,MAAYC,EAAQ,KA2NTC,E,YA3MX,WAAYC,GAAmB,IAAD,uBAC1B,4CAAMA,KAHFC,iBAEsB,EAE1B,IAAMC,EAAI,IAAIC,KAFY,OAG1B,EAAKF,YAAcC,EAAEE,cAErB,EAAKC,MAAQ,CACTC,SAAU,GACVC,UAAW,IAPW,E,gNAYL,MAAO,YAAcC,KAAKP,YAA1B,mB,OAMrBK,GALAA,GADIA,E,QACgBG,SAAS9B,KAAI,SAAC+B,GAG9B,OAFAA,EAAEC,mBAAqBD,EAAEC,kBACzBD,EAAEE,SAAWF,EAAEE,QACRF,MAES/B,KAAI,SAAC+B,GAGrB,OAFAA,EAAEG,eAAiBH,EAAEE,QACjBF,EAAEC,kBAAoB,IAAGD,EAAEG,eAAiBH,EAAEG,gBAAmBH,EAAEC,kBAAoB,GAAK,GACzFD,KAGXF,KAAKM,SAAS,CACVR,SAAUA,I,gRAKQ,MAAO,YAAcE,KAAKP,YAA1B,uB,OAAlBM,E,OACJC,KAAKM,SAAS,CACVP,UAAWA,EAAUQ,Q,gJAKzBP,KAAKQ,mBACLR,KAAKS,sB,kCAIGC,EAAoBC,EAAoBC,EAAoBC,GACpE,IAAIC,EAAO,IAAIC,WACfD,EAAKE,KAAK,4BAA4B,WAGlCF,EAAKG,QAAQ,cAAeP,GAC5BI,EAAKG,QAAQ,eAAgBN,GAC7BG,EAAKG,QAAQ,eAAgBL,GAC7BE,EAAKG,QAAQ,eAAgBJ,GAO7BC,EAAKI,cAAcC,QAJL,CACVC,SAAU,6BAKd,IAEIN,EAAKI,cAAcG,SAEvB,MAAOC,GACH,IAAI3C,EAAI,CACJ4C,QAASD,EAAMC,QACfC,KAAMF,EAAME,KACZC,MAAOH,EAAMG,MACbC,WAAYJ,EAAMI,YAItB,MAFAC,QAAQC,IAAIC,KAAKC,UAAU,CAAER,MAAO3C,KAE9B2C,EAIVR,EAAKiB,QAAQ,YAAcnB,EAAa,SAGxC,IAAIoB,EAAWlB,EAAKmB,WACpB5C,EAAU6C,OAAOF,EAASG,IAAKvB,EAAa,uB,yCAKhC,IAAD,OACfZ,KAAKH,MAAMC,SAASsC,QAAO,SAAAC,GAAE,OAAIA,EAAGC,cAAYnE,KAAI,SAACoE,EAAmBC,GACpE,IAAIC,EAAQ,EAAK5C,MAAME,UAAU2C,MAAK,SAAAC,GAAC,OAAIA,EAAE5D,KAAOwD,EAAQK,mBACtDlC,EAAqB,WAAK+B,QAAL,IAAKA,OAAL,EAAKA,EAAOI,OACjClC,EAAsB,WAAK8B,QAAL,IAAKA,OAAL,EAAKA,EAAOK,UAClClC,EAAqB2B,EAAQQ,QAAU,IAAMR,EAAQS,IACrDnC,EAAoB0B,EAAQ1B,UAClC,EAAKoC,YAAYvC,EAAYC,EAAaC,EAAYC,MAE1Db,KAAKH,MAAMC,SAASsC,QAAO,SAAAC,GAAE,OAAIA,EAAGa,uBAAqB/E,KAAI,SAACoE,EAAmBC,GAC7E,IAAIC,EAAQ,EAAK5C,MAAME,UAAU2C,MAAK,SAAAC,GAAC,OAAIA,EAAE5D,KAAOwD,EAAQY,4BACtDzC,EAAqB,WAAK+B,QAAL,IAAKA,OAAL,EAAKA,EAAOI,OACjClC,EAAsB,WAAK8B,QAAL,IAAKA,OAAL,EAAKA,EAAOK,UAClClC,EAAqB2B,EAAQQ,QAAU,IAAMR,EAAQS,IACrDnC,EAAoB0B,EAAQ1B,UAClC,EAAKoC,YAAYvC,EAAYC,EAAaC,EAAYC,Q,+BAKpD,IAAD,OAEDuC,EAAiBpD,KAAKH,MAAMC,SAASsC,QAAO,SAAClC,GAAD,OAAkBA,EAAEmD,cAAgBnD,EAAEoD,WAAapD,EAAEoC,cACrG,OAAQ,2BACJ,0DAEItC,KAAKH,MAAME,UAAU5B,KAAI,SAACkE,GAEtB,OADQA,EAAGkB,WAAa,EAAK1D,MAAMC,SAASsC,QAAO,SAAClC,GAAD,OAAiBA,EAAEoC,YAAcpC,EAAE0C,kBAAoBP,EAAGtD,MAAIyE,OAAS,EAAK3D,MAAMC,SAASsC,QAAO,SAAClC,GAAD,OAAiBA,EAAEgD,qBAAuBhD,EAAEiD,2BAA6Bd,EAAGtD,MAAIyE,OAC1N,EACP,uBAAKC,IAAKpB,EAAGQ,MAAOa,UAAU,0BACzBrB,EAAGQ,MADR,KACiBR,EAAGkB,WADpB,OACmC,yBAAIlB,EAAGsB,OAD1C,yBACsEtB,EAAGkB,WAAa,EAAK1D,MAAMC,SAASsC,QAAO,SAAClC,GAAD,OAAiBA,EAAEoC,YAAcpC,EAAE0C,kBAAoBP,EAAGtD,MAAIyE,OAAS,EAAK3D,MAAMC,SAASsC,QAAO,SAAClC,GAAD,OAAiBA,EAAEgD,qBAAuBhD,EAAEiD,2BAA6Bd,EAAGtD,MAAIyE,OADnS,KAC6SnB,EAAGuB,WAAa,qBAAGC,MAAO,CAAEC,MAAO,UAAnB,QAAyC,qBAAGD,MAAO,CAAEC,MAAO,oBAAnB,QAE9VV,GAAkBA,EAAeI,QACjC,uBAAKE,UAAU,2BAEPN,EACKhB,QAAO,SAAClC,GAAD,OAAiBA,EAAE6D,UAAY1B,EAAGtD,IAAMmB,EAAE8D,UAAY3B,EAAGtD,IAAMmB,EAAE+D,UAAY5B,EAAGtD,MACvFqD,QAAO,SAACC,GAAD,OAAmBA,EAAGC,aAAeD,EAAGgB,cAAgBhB,EAAGiB,WAAajB,EAAGa,uBAClF/E,KAAI,SAAC+B,GAKF,OAJIA,EAAE6D,UAAY1B,EAAGtD,GAAImB,EAAEG,eAAoC,IAAnBH,EAAEG,eACrCH,EAAE8D,UAAY3B,EAAGtD,GAAImB,EAAEG,eAAoC,IAAnBH,EAAEG,eAC1CH,EAAE+D,UAAY5B,EAAGtD,KAAImB,EAAEG,eAAoC,IAAnBH,EAAEG,gBACnDH,EAAEG,gBAAkBH,EAAEG,eAAe6D,QAAQ,GACtChE,KAEViE,MAAK,SAACC,EAAQC,GACX,OAAOA,EAAEhE,eAAiB+D,EAAE/D,kBAE/BlC,KAAI,SAAC+B,EAAasC,GACf,IAAI8B,EAAQ,4BAAO9B,EAAI,EAAX,KAAgBtC,EAAE8C,IAAlB,IAAwB9C,EAAE6C,QAA1B,IAAmC,yBAAI7C,EAAEE,SAAzC,IAAuDF,EAAE6D,UAAY1B,EAAGtD,GAAK,MAAQ,KAArF,IAA4FmB,EAAE8D,UAAY3B,EAAGtD,GAAK,MAAQ,KAA1H,IAAiImB,EAAE+D,UAAY5B,EAAGtD,GAAK,MAAQ,KAA/J,WAA4K,yBAAImB,EAAEyD,OAAlL,KAEZ,OACI,uBAAKF,IAAKvD,EAAEW,WACNX,EAAEqE,oBAAsBrE,EAAE6D,UAAY1B,EAAGtD,IAAQmB,EAAEsE,oBAAsBtE,EAAE8D,UAAY3B,EAAGtD,IAAQmB,EAAEuE,oBAAsBvE,EAAE+D,UAAY5B,EAAGtD,GAAM,2BAAMuF,GAAeA,QASxM,uBAAKZ,UAAU,aAAarB,EAAGQ,UAG3C,2BAEA,6CAEI7C,KAAKH,MAAMC,SAASsC,QAAO,SAAAC,GAAE,OAAIA,EAAGiB,YAAUnF,KAAI,SAACkE,EAAcG,GAAf,OAC9C,uBAAKiB,IAAKpB,EAAGxB,WACR2B,EAAI,EADT,KACcH,EAAGW,IADjB,IACuBX,EAAGU,YAIlC,yCAEI/C,KAAKH,MAAMC,SAASsC,QAAO,SAAAC,GAAE,OAAIA,EAAGgB,eAAalF,KAAI,SAACkE,EAAcG,GAAf,OACjD,uBAAKiB,IAAKpB,EAAGxB,WACR2B,EAAI,EADT,KACcH,EAAGW,IADjB,IACuBX,EAAGU,QAD1B,QAKR,6CAEI/C,KAAKH,MAAMC,SAASsC,QAAO,SAAAC,GAAE,OAAIA,EAAGC,cAAYnE,KAAI,SAACkE,EAAcG,GAAf,OAChD,uBAAKiB,IAAKpB,EAAGxB,WACR2B,EAAI,EADT,KACcH,EAAGW,IADjB,IACuBX,EAAGU,QAD1B,MACsC,EAAKlD,MAAME,UAAUqC,QAAO,SAACsC,GAAD,OAAiBA,EAAE3F,KAAOsD,EAAGO,mBAAiBzE,KAAI,SAAAuG,GAAC,OAAIA,EAAE7B,aAInI,4CAEI7C,KAAKH,MAAMC,SAASqE,MAAK,SAACC,EAAQC,GAC9B,OAAOA,EAAEjE,QAAUgE,EAAEhE,WACtBgC,QAAO,SAAAC,GAAE,OAAIA,EAAGa,uBAAqB/E,KAAI,SAACkE,EAAcG,GAAf,OACxC,uBAAKiB,IAAKpB,EAAGxB,WACR2B,EAAI,EADT,KACcH,EAAGW,IADjB,IACuBX,EAAGU,QAD1B,MACsCV,EAAGsB,MADzC,MACmD,EAAK9D,MAAME,UAAUqC,QAAO,SAACsC,GAAD,OAAiBA,EAAE3F,KAAOsD,EAAGc,4BAA0BhF,KAAI,SAAAuG,GAAC,OAAIA,EAAE7B,aAIzJ,8CAEI7C,KAAKH,MAAMC,SAASqE,MAAK,SAACC,EAAQC,GAC9B,OAAOA,EAAEjE,QAAUgE,EAAEhE,WACtBgC,QAAO,SAAAC,GAAE,OAAKA,EAAGC,aAAeD,EAAGgB,cAAgBhB,EAAGiB,WAAajB,EAAGa,uBAAqB/E,KAAI,SAACkE,EAAcG,GAAf,OAC9F,uBAAKiB,IAAKpB,EAAGxB,WACR2B,EAAI,EADT,KACcH,EAAGW,IADjB,IACuBX,EAAGU,QAD1B,KACqCV,EAAGjC,QADxC,KACiE,GAAdiC,EAAG0B,SAA8B,GAAd1B,EAAG2B,SAA8B,GAAd3B,EAAG4B,SAAgB,iDAKpH,0BAAQU,QAAS,kBAAM,EAAKC,qBAA5B,2B,GAxMOC,aCJJC,MARf,WACE,OACE,yBAAKpB,UAAU,OACb,kBAAC,EAAD,QCKcqB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAAS/D,OAAO,kBAAC,EAAD,MAASgE,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM/G,MAAK,SAAAgH,GACjCA,EAAaC,kB","file":"static/js/main.721f3c4c.chunk.js","sourcesContent":["var map = {\n\t\"./2020/studenti.json\": [\n\t\t24,\n\t\t4\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 21;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./2020/nastavnaBaza.json\": [\n\t\t25,\n\t\t3\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 22;\nmodule.exports = webpackAsyncContext;","import * as React from 'react';\nimport './main.css';\nimport { ICompany, IStudent } from '../../models/models';\nvar FileSaver = require('file-saver');\n\ndeclare var DocxReader: any;\n\nexport interface MainProps {\n\n}\n\nexport interface MainState {\n    students: IStudent[];\n    companies: ICompany[];\n}\n\nclass Main extends React.Component<MainProps, MainState> {\n    private currentYear: number;\n\n    constructor(props: MainProps) {\n        super(props);\n        const d = new Date();\n        this.currentYear = d.getFullYear();\n\n        this.state = {\n            students: [],\n            companies: [],\n        };\n    }\n\n    async loadStudentsData() {\n        let students = await import(`../../data/${this.currentYear}/studenti.json`);\n        students = students.studenti.map((s: IStudent) => {\n            s.duljinaStudiranja = +s.duljinaStudiranja;\n            s.prosjek = +s.prosjek;\n            return s;\n        })\n        students = students.map((s: IStudent) => {\n            s.tezinskiFaktor = s.prosjek;\n            if (s.duljinaStudiranja > 3) s.tezinskiFaktor = s.tezinskiFaktor - ((s.duljinaStudiranja - 3) / 2);\n            return s;\n        })\n\n        this.setState({\n            students: students,\n        })\n    }\n\n    async loadCompaniesData() {\n        let companies = await import(`../../data/${this.currentYear}/nastavnaBaza.json`);\n        this.setState({\n            companies: companies.firme,\n        })\n    }\n\n    componentDidMount() {\n        this.loadStudentsData();\n        this.loadCompaniesData();\n    }\n\n\n    executeDocx(firmaNaziv: string, firmaAdresa:string, studentIme: string, brIndeksa: string) {\n        var docx = new DocxReader();\n        docx.Load(\"/templates/uputnica.docx\", function () {\n\n            // Replace\n            docx.Replace(\"FIRMA_NAZIV\", firmaNaziv);\n            docx.Replace(\"FIRMA_ADRESA\", firmaAdresa);\n            docx.Replace(\"IME_STUDENTA\", studentIme);\n            docx.Replace(\"MATICNI_BROJ\", brIndeksa);\n\n            // Change var inside document\n            var docxvar = {\n                Variable: \"Change my var inside doc\"\n            };\n\n            docx.docxtemplater.setData(docxvar);\n\n            try {\n                // render the document (replace all occurences of {first_name} by John, {last_name} by Doe, ...)\n                docx.docxtemplater.render();\n            }\n            catch (error) {\n                var e = {\n                    message: error.message,\n                    name: error.name,\n                    stack: error.stack,\n                    properties: error.properties,\n                }\n                console.log(JSON.stringify({ error: e }));\n                // The error thrown here contains additional information when logged with JSON.stringify (it contains a property object).\n                throw error;\n            }\n\n            // Change file name\n            docx.SetName(\"Uputnica \" + studentIme + \".docx\")\n\n            // Download\n            let download = docx.Download();\n            FileSaver.saveAs(download.out, studentIme + \" uputnica.docx\");\n\n        });\n    }\n\n    generateUputnice() {\n        this.state.students.filter(it => it.prihvaceno).map((student: IStudent, i) => {\n            let firma = this.state.companies.find(f => f.id === student.prihvacenaFirma);\n            const firmaNaziv: string = \"\" + firma?.naziv;\n            const firmaAdresa: string = \"\" + firma?.sjediste;\n            const studentIme: string = student.prezime + \" \" + student.ime;\n            const brIndeksa: string = student.brIndeksa;\n            this.executeDocx(firmaNaziv, firmaAdresa, studentIme, brIndeksa)\n        });\n        this.state.students.filter(it => it.prisilnoDodijeljeno).map((student: IStudent, i) => {\n            let firma = this.state.companies.find(f => f.id === student.prisilnoDodijeljenoFirma);\n            const firmaNaziv: string = \"\" + firma?.naziv;\n            const firmaAdresa: string = \"\" + firma?.sjediste;\n            const studentIme: string = student.prezime + \" \" + student.ime;\n            const brIndeksa: string = student.brIndeksa;\n            this.executeDocx(firmaNaziv, firmaAdresa, studentIme, brIndeksa)\n        });\n    }\n\n\n    render() {\n\n        let phase3Students = this.state.students.filter((s: IStudent) => !s.priznavanje && !s.nasaoSam && !s.prihvaceno);\n        return (<div>\n            <h1>Stručne prakse - faza 3</h1>\n            {\n                this.state.companies.map((it: ICompany) => {\n                    let x = it.brojPraksi - this.state.students.filter((s: IStudent) => s.prihvaceno && s.prihvacenaFirma === it.id).length - this.state.students.filter((s: IStudent) => s.prisilnoDodijeljeno && s.prisilnoDodijeljenoFirma === it.id).length;\n                    return x > 0 ? (\n                        <div key={it.naziv} className=\"company-main-container\">\n                            {it.naziv} ({it.brojPraksi}) - <i>{it.email}</i> - slobodno još ({it.brojPraksi - this.state.students.filter((s: IStudent) => s.prihvaceno && s.prihvacenaFirma === it.id).length - this.state.students.filter((s: IStudent) => s.prisilnoDodijeljeno && s.prisilnoDodijeljenoFirma === it.id).length}) {it.poslanMail ? <b style={{ color: \"green\" }}>MAIL</b> : <b style={{ color: \"rgba(0,0,0,0.1)\" }}>MAIL</b>}\n                            {\n                                phase3Students && phase3Students.length &&\n                                <div className=\"company-inner-container\">\n                                    {\n                                        phase3Students\n                                            .filter((s: IStudent) => s.odabir1 === it.id || s.odabir2 === it.id || s.odabir3 === it.id)\n                                            .filter((it: IStudent) => !it.prihvaceno && !it.priznavanje && !it.nasaoSam && !it.prisilnoDodijeljeno)\n                                            .map((s: IStudent) => {\n                                                if (s.odabir1 === it.id) s.tezinskiFaktor = s.tezinskiFaktor * 1.3;\n                                                else if (s.odabir2 === it.id) s.tezinskiFaktor = s.tezinskiFaktor * 1.2;\n                                                else if (s.odabir3 === it.id) s.tezinskiFaktor = s.tezinskiFaktor * 1.1;\n                                                s.tezinskiFaktor = +s.tezinskiFaktor.toFixed(3);\n                                                return s;\n                                            })\n                                            .sort((a: any, b: any) => {\n                                                return b.tezinskiFaktor - a.tezinskiFaktor;\n                                            })\n                                            .map((s: IStudent, i) => {\n                                                let ispis = <span>{i + 1}. {s.ime} {s.prezime} <b>{s.prosjek}</b> {s.odabir1 === it.id ? \"(1)\" : null} {s.odabir2 === it.id ? \"(2)\" : null} {s.odabir3 === it.id ? \"(3)\" : null} email: <i>{s.email}</i> </span>\n                                                // let ispis = <span> {i+1}. {s.ime} {s.prezime} email: <i>{s.email}</i></span>;\n                                                return (\n                                                    <div key={s.brIndeksa}>\n                                                        {(s.forceRemoveOdabir1 && s.odabir1 === it.id) || (s.forceRemoveOdabir2 && s.odabir2 === it.id) || (s.forceRemoveOdabir3 && s.odabir3 === it.id) ? <del>{ispis}</del> : ispis}\n                                                    </div>\n                                                )\n                                            })\n                                    }\n                                </div>\n                            }\n                        </div>)\n                        :\n                        <div className=\"firmaDone\">{it.naziv}</div>\n                })\n            }\n            <br />\n\n            <h1>Našli sami</h1>\n            {\n                this.state.students.filter(it => it.nasaoSam).map((it: IStudent, i) => (\n                    <div key={it.brIndeksa}>\n                        {i + 1}. {it.ime} {it.prezime}\n                    </div>\n                ))\n            }\n            <h1>Priznavanje</h1>\n            {\n                this.state.students.filter(it => it.priznavanje).map((it: IStudent, i) => (\n                    <div key={it.brIndeksa}>\n                        {i + 1}. {it.ime} {it.prezime} {/*it.email*/}\n                    </div>\n                ))\n            }\n            <h1>Prihvaćeno</h1>\n            {\n                this.state.students.filter(it => it.prihvaceno).map((it: IStudent, i) => (\n                    <div key={it.brIndeksa}>\n                        {i + 1}. {it.ime} {it.prezime} - {this.state.companies.filter((c: ICompany) => c.id === it.prihvacenaFirma).map(c => c.naziv)}\n                    </div>\n                ))\n            }\n            <h1>Raspodijeljeno</h1>\n            {\n                this.state.students.sort((a: any, b: any) => {\n                    return b.prosjek - a.prosjek;\n                }).filter(it => it.prisilnoDodijeljeno).map((it: IStudent, i) => (\n                    <div key={it.brIndeksa}>\n                        {i + 1}. {it.ime} {it.prezime} - {it.email} - {this.state.companies.filter((c: ICompany) => c.id === it.prisilnoDodijeljenoFirma).map(c => c.naziv)}\n                    </div>\n                ))\n            }\n            <h1>Neraspodijeljeno</h1>\n            {\n                this.state.students.sort((a: any, b: any) => {\n                    return b.prosjek - a.prosjek;\n                }).filter(it => !it.prihvaceno && !it.priznavanje && !it.nasaoSam && !it.prisilnoDodijeljeno).map((it: IStudent, i) => (\n                    <div key={it.brIndeksa}>\n                        {i + 1}. {it.ime} {it.prezime} ({it.prosjek}) {it.odabir1 == 0 && it.odabir2 == 0 && it.odabir3 == 0 && <b> FALI ANKETA !!!</b>}\n                    </div>\n                ))\n            }\n\n            <button onClick={() => this.generateUputnice()}>Generiraj uputnice</button>\n\n        </div>);\n    }\n}\n\nexport default Main;","import React from 'react';\nimport './App.css';\nimport Main from './components/main/main';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main /> \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}